type Endereco {
  rua: String!
  bairro: String!
  cidade: String!
  estado: String!
  pais: String!
  cep: Int!
  numero: String!
}

type Cliente {
  id: ID!
  nome: String!
  email: String!
  cpf: String!
  dataNasc: String!
  endereco: Endereco!
}

input paramCliente {
  nome: String!
  email: String!
  cpf: String!
  dataNasc: String!
  rua: String!
  bairro: String!
  cidade: String!
  estado: String!
  pais: String!
  cep: Int!
  numero: String!
}

type oneCliente {
  id: ID!
  nome: String!
  email: String!
  cpf: String!
  dataNasc: String!
  rua: String!
  bairro: String!
  cidade: String!
  estado: String!
  pais: String!
  cep: Int!
  numero: String!
}

type Clientes {
  result: [oneCliente!]!
}

type Error {
  path: String!
  message: String!
}

type objErr {
  err: Error!
}

union ClienteResult = Clientes | objErr
union ClienteIdResult = Cliente | objErr

type Query {
  clientes: ClienteResult!
  cliente(id: ID!): ClienteIdResult!
}

type Mutation {
  createCliente(cliente: paramCliente!): ClienteIdResult!
  updateCliente(id: ID!, dados: paramCliente!): ClienteIdResult!
  deleteCliente(id: ID!): String!
}
